$breakpoints: (
  'phone': 320px,
  'tablet': 768px,
  'desktop': 1024px,
) !default;

$media-expressions: (
  'screen': 'screen',
  'print': 'print',
  'handheld': 'handheld',
  'retina2x': (
    '(-webkit-min-device-pixel-ratio: 2)',
    '(min-resolution: 192dpi)',
  ),
  'retina3x': (
    '(-webkit-min-device-pixel-ratio: 3)',
    '(min-resolution: 350dpi)',
  ),
) !default;

$unit-intervals: (
  'px': 1,
  'em': 0.01,
  'rem': 0.1,
) !default;

@mixin flex-box-type($dir, $wrap) {
  display: flex;
  flex-direction: $dir;
  flex-wrap: $wrap;
}

@mixin fluid-size(
  $properties,
  $min-screen,
  $max-screen,
  $min-value,
  $max-value
) {
  & {
    @each $property in $properties {
      #{$property}: $min-value;
    }

    @media screen and (min-width: $min-screen) {
      @each $property in $properties {
        #{$property}: calc-interpolation(
          $min-screen,
          $min-value,
          $max-screen,
          $max-value
        );
      }
    }

    @media screen and (min-width: $max-screen) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

@mixin font-face(
  $name,
  $path,
  $weight: null,
  $style: null,
  $display: null,
  $exts: (eot woff2 woff ttf svg)
) {
  $src: null;

  $extmods: (
    eot: '?',
    svg: '#' + str-replace($name, ' ', '_'),
  );
  $formats: (
    otf: 'opentype',
    ttf: 'truetype',
  );

  @each $ext in $exts {
    $extmod: if(
      map-has-key($extmods, $ext),
      $ext + map-get($extmods, $ext),
      $ext
    );
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append(
      $src,
      url(quote($path + '.' + $extmod)) format(quote($format)),
      comma
    );
  }
  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    @if ($display) {
      font-display: $display;
    }
    src: $src;
  }
}

@mixin font-face-multiple($fonts) {
  @each $font in $fonts {
    $name: if(map-has-key($font, 'name'), map-get($font, 'name'), null);
    $path: if(map-has-key($font, 'path'), map-get($font, 'path'), null);
    $weight: if(map-has-key($font, 'weight'), map-get($font, 'weight'), null);
    $style: if(map-has-key($font, 'style'), map-get($font, 'style'), null);
    $display: if(
      map-has-key($font, 'display'),
      map-get($font, 'display'),
      null
    );
    $exts: if(map-has-key($font, 'exts'), map-get($font, 'exts'), null);
    @include font-face($name, $path, $weight, $style, $display, $exts);
  }
}

@mixin media($conditions...) {
  @for $i from 1 through length($conditions) {
    $conditions: set-nth(
      $conditions,
      $i,
      parse-expression(nth($conditions, $i))
    );
  }

  $branches: get-query-branches($conditions);
  $query: '';

  @each $branch in $branches {
    @if (str-length($query) != 0) {
      $query: $query + ', ';
    }

    $query: $query + $branch;
  }

  @media #{$query} {
    @content;
  }
}

@mixin x-support($name, $value) {
  @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
    #{$vendor}#{$name}: #{$value};
  }
}
